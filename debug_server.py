#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
"""

import sys
import traceback

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã"""
    try:
        print("1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã...")
        
        from fastapi import FastAPI, UploadFile, File, HTTPException, Query, Depends, Header, Form
        print("   ‚úÖ FastAPI –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from sqlalchemy.orm import Session
        print("   ‚úÖ SQLAlchemy –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from database import get_db, init_db
        print("   ‚úÖ database –º–æ–¥—É–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from models import User
        print("   ‚úÖ models –º–æ–¥—É–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from auth import verify_password, get_password_hash, create_access_token, decode_access_token
        print("   ‚úÖ auth –º–æ–¥—É–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        traceback.print_exc()
        return False

def test_database():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        print("2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
        
        from database import get_db, init_db
        from models import User
        
        init_db()
        print("   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        db = next(get_db())
        users = db.query(User).all()
        print(f"   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        traceback.print_exc()
        return False

def test_auth():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é"""
    try:
        print("3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...")
        
        from database import get_db
        from models import User
        from auth import verify_password, create_access_token
        
        db = next(get_db())
        user = db.query(User).filter(User.username == "qwe").first()
        
        if not user:
            print("   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å qwe –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.username}")
        
        password_correct = verify_password("qwe", user.hashed_password)
        if not password_correct:
            print("   ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å")
            return False
        
        print("   ‚úÖ –ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π")
        
        token = create_access_token(data={"sub": user.username})
        print(f"   ‚úÖ –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω: {token[:20]}...")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        traceback.print_exc()
        return False

def test_fastapi_app():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        print("4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        
        from fastapi import FastAPI
        from database import get_db, init_db
        from models import User
        from auth import verify_password, get_password_hash, create_access_token, decode_access_token
        from sqlalchemy.orm import Session
        
        app = FastAPI(title="Plaud API")
        print("   ‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        init_db()
        print("   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Plaud ===\n")
    
    success = True
    
    success &= test_imports()
    print()
    
    success &= test_database()
    print()
    
    success &= test_auth()
    print()
    
    success &= test_fastapi_app()
    print()
    
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("–°–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("üí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã!")
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞.")
