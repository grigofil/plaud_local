#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
"""

import requests
import json

def test_login():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    try:
        print("üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...")
        
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
        login_data = {
            "username": "qwe",
            "password": "qwe"
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Ö–æ–¥
        response = requests.post(
            "http://localhost:8000/auth/login",
            data=login_data,
            headers={"Content-Type": "application/x-www-form-urlencoded"}
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!")
            print(f"   –¢–æ–∫–µ–Ω: {data.get('access_token', 'N/A')[:20]}...")
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data.get('username', 'N/A')}")
            print(f"   ID: {data.get('user_id', 'N/A')}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            token = data.get('access_token')
            if token:
                print("\nüë§ –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...")
                user_info_response = requests.get(
                    "http://localhost:8000/auth/me",
                    headers={"Authorization": f"Bearer {token}"}
                )
                
                if user_info_response.status_code == 200:
                    user_info = user_info_response.json()
                    print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ–ª—É—á–µ–Ω–∞!")
                    print(f"   Username: {user_info.get('username')}")
                    print(f"   Email: {user_info.get('email')}")
                    print(f"   Is Active: {user_info.get('is_active')}")
                    print(f"   Is Admin: {user_info.get('is_admin')}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {user_info_response.status_code}")
                    print(f"   –û—Ç–≤–µ—Ç: {user_info_response.text}")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def test_users_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç endpoint —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    try:
        print("\nüë• –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        login_data = {"username": "qwe", "password": "qwe"}
        login_response = requests.post(
            "http://localhost:8000/auth/login",
            data=login_data,
            headers={"Content-Type": "application/x-www-form-urlencoded"}
        )
        
        if login_response.status_code != 200:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        token = login_response.json().get('access_token')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users_response = requests.get(
            "http://localhost:8000/users",
            headers={"Authorization": f"Bearer {token}"}
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ /users: {users_response.status_code}")
        
        if users_response.status_code == 200:
            users_data = users_response.json()
            print("‚úÖ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–µ–Ω!")
            print(f"   –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users_data.get('users', []))}")
            
            for user in users_data.get('users', []):
                print(f"   - {user.get('username')} (ID: {user.get('id')}, Admin: {user.get('is_admin')})")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {users_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return False

if __name__ == "__main__":
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API Plaud ===\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥
    login_success = test_login()
    
    if login_success:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        test_users_endpoint()
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
